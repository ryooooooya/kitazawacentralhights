---
import type { SelectProperty } from '../../../../../lib/interfaces'
import {
  getRankedPosts,
  getAllAuthors,
  getPostsByAuthorAndPage,
  getNumberOfPagesByAuthor,
} from '../../../../../lib/notion/client'
import {
  buildPostFeaturedImageURLs,
  buildURLToImageMap,
} from '../../../../../lib/blog-helpers'
import Layout from '../../../../../layouts/Layout.astro'
import NoContents from '../../../../../components/NoContents.astro'
import PostDate from '../../../../../components/PostDate.astro'
import PostTags from '../../../../../components/PostTags.astro'
import PostTitle from '../../../../../components/PostTitle.astro'
import PostFeaturedImage from '../../../../../components/PostFeaturedImage.astro'
import PostExcerpt from '../../../../../components/PostExcerpt.astro'
import ReadMoreLink from '../../../../../components/ReadMoreLink.astro'
import Pagination from '../../../../../components/Pagination.astro'
import BlogPostsLink from '../../../../../components/BlogPostsLink.astro'
import BlogTagsLink from '../../../../../components/BlogTagsLink.astro'
import styles from '../../../../../styles/blog.module.css'
import '../../../../../styles/notion-color.css'

export async function getStaticPaths() {
  const allAuthors = await getAllAuthors()

  let params = []

  await Promise.all(allAuthors.map((author: SelectProperty) => {
    return getNumberOfPagesByAuthor(author.name).then((numberOfPages: number) => {
      for (let i = 2; i <= numberOfPages; i++) {
        params.push({ params: { author: author.name, page: i.toString() }})
      }
    })
  }))

  return params
}

const { author, page } = Astro.params

const [posts, rankedPosts, authors, numberOfPages] = await Promise.all([
getPostsByAuthorAndPage(author, parseInt(page, 10)),
  getRankedPosts(),
  getAllAuthors(),
  getNumberOfPagesByAuthor(author),
])

const currentAuthor = posts[0].Authors.find(t => t.name === author)

const imageURLs = buildPostFeaturedImageURLs(posts).filter(url => url)
const imageURLMap = await buildURLToImageMap(imageURLs)
---

<Layout title={`Posts in ${author} ${page}/${numberOfPages}`} path={`/blog/author/${author}/page/${page}`}>
  <div className={styles.container}>
    <main>
      <header>
        <h2><span class={`tag ${currentAuthor.color}`}>{author}</span> {page}/{numberOfPages}</h2>
      </header>

      {posts.length === 0 ? (
          <NoContents contents={posts} />
        ) : posts.map(post => (
          <div className={styles.post} key={post.Slug}>
            <PostDate post={post} />
            <PostTags post={post} />
            <PostTitle post={post} />
            <PostFeaturedImage post={post} urlMap={imageURLMap} />
            <PostExcerpt post={post} />
            <ReadMoreLink post={post} />
          </div>
        ))}

      <footer>
        <Pagination tag={author} currentPage={parseInt(page, 10)} numberOfPages={numberOfPages} />
      </footer>
    </main>

    <aside>
      <BlogPostsLink heading="Recommended" posts={rankedPosts} />
      <BlogTagsLink heading="Categories" tags={authors} />
    </aside>
  </div>
</Layout>
