---
import type { SelectProperty } from '../../../lib/interfaces'
import { NUMBER_OF_POSTS_PER_PAGE } from '../../../server-constants'
import {
  getPostsByTag,
  getRankedPosts,
  getAllTags,
  getNumberOfPagesByTag,
} from '../../../lib/notion/client'
import {
  buildPostFeaturedImageURLs,
  buildURLToImageMap,
getPostLink,
} from '../../../lib/blog-helpers'
import Layout from '../../../layouts/Layout.astro'
import NoContents from '../../../components/NoContents.astro'
import PostDate from '../../../components/PostDate.astro'
import PostTags from '../../../components/PostTags.astro'
import PostTitle from '../../../components/PostTitle.astro'
import PostFeaturedImage from '../../../components/PostFeaturedImage.astro'
import PostExcerpt from '../../../components/PostExcerpt.astro'
import ReadMoreLink from '../../../components/ReadMoreLink.astro'
import Pagination from '../../../components/Pagination.astro'
import BlogPostsLink from '../../../components/BlogPostsLink.astro'
import BlogTagsLink from '../../../components/BlogTagsLink.astro'
import styles from '../../../styles/blog.module.css'
import '../../../styles/notion-color.css'

export async function getStaticPaths() {
  const allTags = await getAllTags()
  return allTags.map((tag: SelectProperty) => ({ params: { tag: tag.name }}))
}

const { tag } = Astro.params

const [posts, rankedPosts, tags, numberOfPages] = await Promise.all([
  getPostsByTag(tag, NUMBER_OF_POSTS_PER_PAGE),
  getRankedPosts(),
  getAllTags(),
  getNumberOfPagesByTag(tag),
])

const currentTag = posts[0].Tags.find(t => t.name === tag)

const imageURLs = buildPostFeaturedImageURLs(posts).filter(url => url)
const imageURLMap = await buildURLToImageMap(imageURLs)
---

<Layout
  title={`Posts in ${tag}`}
  path={`/blog/tag/${tag}`}
>
  <div class="flex w-full gap-x-10 px-10">
    <aside class="navWrap">
      <h1 class="title">北沢セントラルハイツ501</h1>
      <p class="titleEn">Kitazawa Central Hights</p>
      <nav>
        <BlogTagsLink tags={tags} currentTag={tag}/>
      </nav>
    </aside>
    <main class="workWrap">
      <section class="flex flex-wrap gap-10">
        {posts.length === 0 ? (
          <NoContents contents={posts} />
        ) : posts.map(post => (
          <a
            href={getPostLink(post.Slug)}
            key={post.Slug}
            class="workItem"
          >
            <div class="workImage">
              <img src={imageURLMap[post.FeaturedImage]} alt="post-featured-image" />
            </div>
            <div class="workInformation">
              <h2>
                {post.Title}
              </h2>
              {post.Authors &&
              post.Authors.length > 0 &&
              post.Authors.map((author: SelectProperty) => (
                <p>
                  {author.name}
                </p>
              ))}
            </div>
          </a>
        ))}
      </section>
      <div class="mt-10">
        <Pagination tag={''} currentPage={1} numberOfPages={numberOfPages} />
      </div>
    </main>
  </div>
</Layout>

<style lang="scss">
  .navWrap{
    width: calc((100% - 80px) / 3);
    padding-top: 32px;
  }
  .title{
    font-size: 2rem;
    font-weight: 400;
    line-height: 1.2;
    letter-spacing: -0.01em;
  }
  .titleEn{
    font-size: 1.6875rem;
    line-height: 1.481;
    letter-spacing: -0.035em;
  }
  .workWrap{
    width: calc((100% - 80px) / 3 * 2 + 40px);
  }
  .workItem{
    position: relative;
    width: calc((100% - 40px) / 2);
    margin-top: 40px;
    @media (hover:hover) {
      &:hover{
        .workInformation{
          h2, p{
            opacity: 1;
          }
        }
      }
    }
  }
  .workImage{
    padding: 32px;
    background: #F2F3F5;
    img{
      height: 100%;
      max-height: 256px;
      margin: 0 auto;
      box-shadow: 0px 8px 18px -10px rgba(0, 0, 0, 0.15);
    }
  }
  .workInformation{
    position: absolute;
    bottom: 0;
    left: 0;
    display: flex;
    justify-content: space-between;
    width: 100%;
    padding: 0 4px;
    overflow: hidden;
    h2, p{
      font-size: 1.125rem;
      line-height: 1.777;
      letter-spacing: -0.01em;
      opacity: 0;
    }
    h2{
      flex: 1;
      display: -webkit-box;
      -webkit-box-orient: vertical;
      -webkit-line-clamp: 1;
    }
    p{
      width: 100px;
      text-align: right;
    }
  }
</style>
